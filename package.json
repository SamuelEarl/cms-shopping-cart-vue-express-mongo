{
  "name": "app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "serve": "vue-cli-service serve",
    "build:vue": "TARGET=browser vue-cli-service build",
    "lint:vue": "vue-cli-service lint",
    "test:e2e": "vue-cli-service test:e2e",
    "test:unit": "vue-cli-service test:unit",
    "__dev_comment__": "Configure dev env with babel-node and node-dev (or nodemon if nodemon isn't broken): https://github.com/babel/example-node-server. UPDATE: In Babel 7, the 'babel-node' command comes from @babel/node: https://new.babeljs.io/docs/en/next/v7-migration.html#babel-node. If node-dev doesn't work in dev:express, then use PM2's watch and restart options for development: https://pm2.io/doc/en/runtime/guide/development-tools/#watch-options.",
    "_dev": "node src/server/server.js",
    "dev": "npm-run-all --parallel dev:vue dev:express",
    "dev:vue": "vue-cli-service serve",
    "dev:express": "NODE_ENV=development node-dev --no-notify src/server/server.js --exec babel-node",
    "__build_comment__": "Configure production build with babel (https://github.com/babel/example-node-server), but use the new @babel/cli package (https://babeljs.io/docs/en/babel-cli)",
    "prebuild": "npm run clean",
    "build": "npm-run-all --serial build:vue build:express",
    "build:vue-old": "NODE_ENV=production webpack --env prod",
    "build:express": "TARGET=server NODE_ENV=production babel src/server --out-dir dist/server --copy-files",
    "postbuild": "echo Build Complete! Now run: npm run prod",
    "__prod_comment__": "After building your app for production, run 'npm run prod' to start the Node server and run your app in production mode",
    "prod": "NODE_ENV=production node dist/server/server.js",
    "__buildprod_comment__": "The buildprod command is a combination of the 'build' command and the 'prod' command.",
    "prebuildprod": "npm run clean",
    "buildprod": "npm-run-all --serial build:vue build:express prod",
    "__clean_comment__": "'rimraf' is the UNIX command 'rm -rf' for Node.",
    "clean": "rimraf ./dist && mkdir ./dist",
    "__lint_comment__": "This will run ESLint against anything in our src folder with the file extension .js or .vue.",
    "lint": "eslint --ext .js, .vue src",
    "__comment__": "Do I still need the following linting scripts? I need to test them and see if they do anything differently than the one above.",
    "lint:js": "eslint src/;exit 0",
    "lint:vue-old": "eslint --ext .js, .vue src;exit 0",
    "__test_comment__": "Testing the Server: https://github.com/babel/example-node-server#testing-the-server. Vue Testing: https://itnext.io/vue-js-and-webpack-4-from-scratch-part-3-3f68d2a3c127.",
    "pretest": "npm run lint",
    "__test:client__": "jest",
    "test:server": "NODE_ENV=test mocha --compilers js:babel-register",
    "test:express": "Need to create test scripts",
    "posttest": "echo The test suite is complete!",
    "deploy": ""
  },
  "dependencies": {
    "core-js": "^2.6.5",
    "express": "^4.17.0",
    "node-dev": "^4.0.0",
    "npm-run-all": "^4.1.5",
    "register-service-worker": "^1.6.2",
    "style-resources-loader": "^1.2.1",
    "vue": "^2.6.10",
    "vue-router": "^3.0.3",
    "vuex": "^3.0.1"
  },
  "devDependencies": {
    "@vue/cli-plugin-babel": "^3.7.0",
    "@vue/cli-plugin-e2e-nightwatch": "^3.7.0",
    "@vue/cli-plugin-eslint": "^3.7.0",
    "@vue/cli-plugin-pwa": "^3.7.0",
    "@vue/cli-plugin-unit-jest": "^3.7.0",
    "@vue/cli-service": "^3.7.0",
    "@vue/test-utils": "1.0.0-beta.29",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^23.6.0",
    "eslint": "^5.16.0",
    "eslint-plugin-vue": "^5.0.0",
    "stylus": "^0.54.5",
    "stylus-loader": "^3.0.2",
    "vue-template-compiler": "^2.5.21"
  }
}
